{"version":3,"sources":["fire.js","components/Login.js","components/Hero.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbd61faf.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBWxbm3DPr5HqxNRZERWEEJoWHgtwEUMS0\",\r\n    authDomain: \"fir-react-d5690.firebaseapp.com\",\r\n    projectId: \"fir-react-d5690\",\r\n    storageBucket: \"fir-react-d5690.appspot.com\",\r\n    messagingSenderId: \"230751563400\",\r\n    appId: \"1:230751563400:web:a0b5d012993c6b2378b93d\",\r\n    measurementId: \"G-E80BQRMYL8\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        email, \r\n        setEmail, \r\n        password, \r\n        setPassword, \r\n        handleLogin, \r\n        handleSignup, \r\n        hasAccount, \r\n        setHasAccount, \r\n        emailError, \r\n        passwordError\r\n    } = props;\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Email</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={e => setEmail(e.target.value)}/>\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input type=\"password\" required value={password} onChange={e => setPassword(e.target.value)}/>\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount ? (\r\n                        <>\r\n                        <button onClick={handleLogin}>Sign in</button>\r\n                        <p>\r\n                            Dont have an account? \r\n                            <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\r\n                        </p>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <button onClick={handleSignup}>Sign up</button>\r\n                        <p>\r\n                            Have an account? \r\n                            <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\r\n                        </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Hero = ({handleLogout}) => {\r\n    return(\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\nexport default Hero;","import React, {useState, useEffect} from 'react';\nimport fire from './fire';\nimport Login from './components/Login';\nimport Hero from './components/Hero';\nimport './App.css';\n\nconst App = ()=> {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n  const clearErrors =()=>{\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch(err => {\n      switch(err.code){\n        case 'auth/invalid-email':\n\n        case 'auth/user-disabled':\n\n        case 'auth/user-not-found':\n          setEmailError(err.message);\n          break;\n\n        case 'auth/wrong-password':\n          setPassword(err.message);\n          break;\n\n      }\n    });\n  };\n\n  const handleSignup = () =>{\n    clearErrors();\n    fire\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .catch(err => {\n      switch(err.code){\n        case 'auth/email-already-exists':\n\n        case 'auth/invalid-email':\n          setEmailError(err.message);\n          break;\n\n        case 'auth/weak-password':\n          setPassword(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(function(user) {\n      if(user){\n        clearInputs();\n        setUser(user);\n      }\n      else{\n        setUser('');\n      }\n    })\n  }\n\n  useEffect(()=>{\n    authListener();\n  },[])\n\n  return (\n    <div className=\"App\">\n      {user ?(\n        <Hero handleLogout={handleLogout}/>\n      ):(\n        <Login \n          email={email} \n          setEmail={setEmail} \n          password={password} \n          setPassword={setPassword} \n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}